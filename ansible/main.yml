---
- hosts: "{{ host }}"
  remote_user: admin ##可以切换root执行远程
  become: true
  become_method: su
  tasks:
    ###暂停### 关键字wait_for
    - name: 暂停30秒，然后继续..
      wait_for:
        timeout: 30

    ##下载某个东西## 模块unarchive
    - name: 下载东西
      unarchive:
        src: "可以是本地的文件，或者是URL"
        dest: "远程主机上的一个路径，即文件解压的路径，注意后面不要带斜杠"
        remote_src: True
      delegate_to: 127.0.0.1  ##下载到本地
      run_once: True ##只跑一次
      when:  "ansible_expr.split('.')[0].split('_')[1] ==  'xxxx'"   ##当host的主机符合条件的时候执行

    - name: mkdir  dir 批量创建目录
      file:
        path: "/data2/bak41month/download/{{ item }}"
        state: directory
        mode: 0755
      with_items:
        - dir1
        - dir2     

    ##debug信息打印###      
    - name: print sth here
      shell: ls -l
      register: lsoutput
    - name: echo lsoutput info
      debug:
        var: lsoutput.stdout_lines

    ##拷贝文件到远程## 关键字copy      
    - name: upload scripts
      copy:
        src: "scripts/{{ item }}"
        dest: "/usr/local/bin"
        mode: 0755
      with_items:
        - item1
        - item2

    ##拷贝远程的文件到本地## 关键字 find feth    
    - name: find file
      find:
        paths: "主机远程路径"
        patterns: "*"
        recurse: no
      register: resfile

    - name: scp file
      fetch:
        src: "{{ item.path }}"
        dest: "本地的路径"
        flat: yes
      with_items: "{{ resfile.files }}"

    ##执行shell命令##
    - name: ignore_errors test
      shell:  ls -l
      ignore_errors: True  ##如果失败了， 也会执行下一条name。

    # 2.when条件判断之引用变量
    # when变量引用错误提示：[WARNING]: when statements should not include jinja2 templating delimiters such as {{ }} or {% %}.
    # 正确的引用方式：将{{}} or {% %} 改为()
    # 错误写法示例：when: ansible_default_ipv4.address == {{ ETCD_NODE03 }}
    # 正确写法示例：when: ansible_default_ipv4.address == (ETCD_NODE03)
    - name: check cn game Srv port
      shell:  netstat -ntlp |grep  -E -w "71|72|73"
      when: "hosts == 'lzll_ios_cn_zs.(zone).Game.1' "

    - name: check gat game Srv port
      shell:  netstat -ntlp |grep  -E -w "71|72|73"
      when: 
        ansible_expr |  regex_search('(_gat_)')  ##主机名包含"_gat_"
    